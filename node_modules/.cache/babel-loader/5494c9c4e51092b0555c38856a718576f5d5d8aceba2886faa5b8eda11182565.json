{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Suspense as _Suspense, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Suspense, null, {\n    fallback: _withCtx(() => [_createTextVNode(\" Loading... \")]),\n    default: _withCtx(() => [_createElementVNode(\"div\", null, [_createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.sort('id'))\n    }, \"ID\"), _createElementVNode(\"th\", {\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.sort('name'))\n    }, \"Name\"), _createElementVNode(\"th\", {\n      onClick: _cache[2] || (_cache[2] = $event => _ctx.sort('age'))\n    }, \"Age\")])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sortedData, (item, index) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: index\n      }, [_createElementVNode(\"td\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.name), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])])])]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_Suspense","fallback","_withCtx","_createElementVNode","onClick","_cache","$event","_ctx","sort","_createElementBlock","_Fragment","_renderList","sortedData","item","index","key","_toDisplayString","name"],"sources":["/Users/matiasortiz/qu-test-api-table/src/App.vue"],"sourcesContent":["<template>\n\n<Suspense>\n  <!-- component with nested async dependencies -->\n  <div>\n    <table>\n      <thead>\n        <tr>\n          <th @click=\"sort('id')\">ID</th>\n          <th @click=\"sort('name')\">Name</th>\n          <th @click=\"sort('age')\">Age</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(item,index) in sortedData\" :key=\"index\">\n          <td>{{ item.name }}</td>\n          <td>{{ item.name }}</td>\n          <td>{{ item.name }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <!-- loading state via #fallback slot -->\n  <template #fallback>\n    Loading...\n  </template>\n</Suspense>\n\n</template>\n\n<script>\nimport { defineComponent, ref, computed, } from 'vue';\n\nimport swapi from '@/api/swapiService';\n\nexport default defineComponent({\n  name: 'DataTable',\n  async setup() {\n    const data = ref([]); // Holds the API data\n    const sortBy = ref(null); // Holds the current sorting column\n    const sortDesc = ref(false); // Determines whether to sort in descending order\n\n    // Fetch data from the API\n    /*const fetchData = async () => {\n      try {\n        const response = await axios.get('https://swapi.dev/api/planets');\n        data.value = response.data.results; // Update the data ref with the fetched data\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };*/\n\n    data.value = await swapi.fetchData()\n\n    // Watch the sortBy and sortDesc refs for changes and sort the data accordingly\n/*     watch([sortBy, sortDesc], () => {\n      if (sortBy.value) {\n        data.value.sort((a, b) => {\n          const modifier = sortDesc.value ? -1 : 1;\n          if (a[sortBy.value] < b[sortBy.value]) return -1 * modifier;\n          if (a[sortBy.value] > b[sortBy.value]) return 1 * modifier;\n          return 0;\n        });\n      }\n    }); */\n\n  \n\n\n    // Call the fetchData method when the component is mounted\n    //fetchData();\n\n    // Return the reactive data and methods\n    return {\n      data,\n      sortBy,\n      sortDesc,\n      sort(column) {\n        if (sortBy.value === column) {\n          sortDesc.value = !sortDesc.value;\n        } else {\n          sortBy.value = column;\n          sortDesc.value = false;\n        }\n      },\n      sortedData: computed(() => data.value),\n    };\n  },\n});\n</script>\n"],"mappings":";;uBAEAA,YAAA,CAyBWC,SAAA;IAHEC,QAAQ,EAAAC,QAAA,CAAC,MAEpB,C,iBAFoB,cAEpB,E;sBAtBA,MAiBM,CAjBNC,mBAAA,CAiBM,cAhBJA,mBAAA,CAeQ,gBAdNA,mBAAA,CAMQ,gBALNA,mBAAA,CAIK,aAHHA,mBAAA,CAA+B;MAA1BC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,IAAI;OAAQ,IAAE,GAC1BL,mBAAA,CAAmC;MAA9BC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,IAAI;OAAU,MAAI,GAC9BL,mBAAA,CAAiC;MAA5BC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,IAAI;OAAS,KAAG,E,KAGhCL,mBAAA,CAMQ,iB,kBALNM,mBAAA,CAIKC,SAAA,QAAAC,WAAA,CAJsBJ,IAAA,CAAAK,UAAU,GAAzBC,IAAI,EAACC,KAAK;2BAAtBL,mBAAA,CAIK;QAJmCM,GAAG,EAAED;MAAK,IAChDX,mBAAA,CAAwB,YAAAa,gBAAA,CAAjBH,IAAI,CAACI,IAAI,kBAChBd,mBAAA,CAAwB,YAAAa,gBAAA,CAAjBH,IAAI,CAACI,IAAI,kBAChBd,mBAAA,CAAwB,YAAAa,gBAAA,CAAjBH,IAAI,CAACI,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}