{"ast":null,"code":"import { ref, reactive, watch } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'DataTable',\n  setup() {\n    const data = ref([]); // Holds the API data\n    const sortBy = ref(null); // Holds the current sorting column\n    const sortDesc = ref(false); // Determines whether to sort in descending order\n\n    // Fetch data from the API\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://api.example.com/data');\n        data.value = response.data; // Update the data ref with the fetched data\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    // Watch the sortBy and sortDesc refs for changes and sort the data accordingly\n    watch([sortBy, sortDesc], () => {\n      if (sortBy.value) {\n        data.value.sort((a, b) => {\n          const modifier = sortDesc.value ? -1 : 1;\n          if (a[sortBy.value] < b[sortBy.value]) return -1 * modifier;\n          if (a[sortBy.value] > b[sortBy.value]) return 1 * modifier;\n          return 0;\n        });\n      }\n    });\n\n    // Call the fetchData method when the component is mounted\n    fetchData();\n\n    // Return the reactive data and methods\n    return {\n      data,\n      sortBy,\n      sortDesc,\n      sort(column) {\n        if (sortBy.value === column) {\n          sortDesc.value = !sortDesc.value;\n        } else {\n          sortBy.value = column;\n          sortDesc.value = false;\n        }\n      },\n      sortedData: computed(() => data.value)\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","watch","axios","name","setup","data","sortBy","sortDesc","fetchData","response","get","value","error","console","sort","a","b","modifier","column","sortedData","computed"],"sources":["/Users/matiasortiz/qu-test-api-table/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <table>\n      <thead>\n        <tr>\n          <th @click=\"sort('id')\">ID</th>\n          <th @click=\"sort('name')\">Name</th>\n          <th @click=\"sort('age')\">Age</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"item in sortedData\" :key=\"item.id\">\n          <td>{{ item.id }}</td>\n          <td>{{ item.name }}</td>\n          <td>{{ item.age }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, watch } from 'vue';\nimport axios from 'axios';\n\nexport default {\n  name: 'DataTable',\n  setup() {\n    const data = ref([]); // Holds the API data\n    const sortBy = ref(null); // Holds the current sorting column\n    const sortDesc = ref(false); // Determines whether to sort in descending order\n\n    // Fetch data from the API\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://api.example.com/data');\n        data.value = response.data; // Update the data ref with the fetched data\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    // Watch the sortBy and sortDesc refs for changes and sort the data accordingly\n    watch([sortBy, sortDesc], () => {\n      if (sortBy.value) {\n        data.value.sort((a, b) => {\n          const modifier = sortDesc.value ? -1 : 1;\n          if (a[sortBy.value] < b[sortBy.value]) return -1 * modifier;\n          if (a[sortBy.value] > b[sortBy.value]) return 1 * modifier;\n          return 0;\n        });\n      }\n    });\n\n    // Call the fetchData method when the component is mounted\n    fetchData();\n\n    // Return the reactive data and methods\n    return {\n      data,\n      sortBy,\n      sortDesc,\n      sort(column) {\n        if (sortBy.value === column) {\n          sortDesc.value = !sortDesc.value;\n        } else {\n          sortBy.value = column;\n          sortDesc.value = false;\n        }\n      },\n      sortedData: computed(() => data.value),\n    };\n  },\n};\n</script>\n"],"mappings":"AAsBA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,KAAI,QAAS,KAAK;AAC1C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIN,GAAG,CAAC,EAAE,CAAC,EAAE;IACtB,MAAMO,MAAK,GAAIP,GAAG,CAAC,IAAI,CAAC,EAAE;IAC1B,MAAMQ,QAAO,GAAIR,GAAG,CAAC,KAAK,CAAC,EAAE;;IAE7B;IACA,MAAMS,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,8BAA8B,CAAC;QAChEL,IAAI,CAACM,KAAI,GAAIF,QAAQ,CAACJ,IAAI,EAAE;MAC9B,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;;IAED;IACAX,KAAK,CAAC,CAACK,MAAM,EAAEC,QAAQ,CAAC,EAAE,MAAM;MAC9B,IAAID,MAAM,CAACK,KAAK,EAAE;QAChBN,IAAI,CAACM,KAAK,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UACxB,MAAMC,QAAO,GAAIV,QAAQ,CAACI,KAAI,GAAI,CAAC,IAAI,CAAC;UACxC,IAAII,CAAC,CAACT,MAAM,CAACK,KAAK,IAAIK,CAAC,CAACV,MAAM,CAACK,KAAK,CAAC,EAAE,OAAO,CAAC,IAAIM,QAAQ;UAC3D,IAAIF,CAAC,CAACT,MAAM,CAACK,KAAK,IAAIK,CAAC,CAACV,MAAM,CAACK,KAAK,CAAC,EAAE,OAAO,IAAIM,QAAQ;UAC1D,OAAO,CAAC;QACV,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;;IAEF;IACAT,SAAS,CAAC,CAAC;;IAEX;IACA,OAAO;MACLH,IAAI;MACJC,MAAM;MACNC,QAAQ;MACRO,IAAIA,CAACI,MAAM,EAAE;QACX,IAAIZ,MAAM,CAACK,KAAI,KAAMO,MAAM,EAAE;UAC3BX,QAAQ,CAACI,KAAI,GAAI,CAACJ,QAAQ,CAACI,KAAK;QAClC,OAAO;UACLL,MAAM,CAACK,KAAI,GAAIO,MAAM;UACrBX,QAAQ,CAACI,KAAI,GAAI,KAAK;QACxB;MACF,CAAC;MACDQ,UAAU,EAAEC,QAAQ,CAAC,MAAMf,IAAI,CAACM,KAAK;IACvC,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}