{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"p-4\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Star Wars Planets\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"table-planets\"\n};\nconst _hoisted_4 = {\n  class: \"table table-sm table-striped\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"material-icons\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"material-icons\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"material-icons\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"material-icons\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Diameter\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Gravity\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Created\", -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Orbital Period\", -1 /* HOISTED */);\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Population\", -1 /* HOISTED */);\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Rotation Period\", -1 /* HOISTED */);\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Surface Water\", -1 /* HOISTED */);\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Terrain\", -1 /* HOISTED */);\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Edited\", -1 /* HOISTED */);\nconst _hoisted_18 = {\n  class: \"table-group-divider\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"table\", _hoisted_4, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.sort('name'))\n  }, [_createTextVNode(\"Name \"), _ctx.sortBy == 'name' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString(_ctx.arrowIconName), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"sort\"))]), _createElementVNode(\"th\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.sort('climate'))\n  }, [_createTextVNode(\"Climate \"), _ctx.sortBy == 'climate' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString(_ctx.arrowIconName), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"sort\"))]), _hoisted_9, _hoisted_10, _hoisted_11, _hoisted_12, _hoisted_13, _hoisted_14, _hoisted_15, _hoisted_16, _hoisted_17])]), _createElementVNode(\"tbody\", _hoisted_18, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sortedData, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.climate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.diameter), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.gravity), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatDate(item.created)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.orbital_period), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.population), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.rotation_period), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.surface_water), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.terrain), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatDate(item.edited)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","$event","_ctx","sort","sortBy","_hoisted_5","_toDisplayString","arrowIconName","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_Fragment","_renderList","sortedData","item","index","key","name","climate","diameter","gravity","formatDate","created","orbital_period","population","rotation_period","surface_water","terrain","edited"],"sources":["/Users/matiasortiz/qu-test-api-table/src/components/Table.vue"],"sourcesContent":["<template>\n  <div class=\"p-4\">\n    <h3>Star Wars Planets</h3>\n    <div class=\"table-planets\">\n      <table class=\"table table-sm table-striped\">\n        <thead>\n          <tr>\n            <th @click=\"sort('name')\">Name\n              <span v-if=\"sortBy == 'name'\" class=\"material-icons\">{{arrowIconName}}</span>\n              <span v-else class=\"material-icons\">sort</span>\n            </th>\n            <th @click=\"sort('climate')\">Climate\n              <span v-if=\"sortBy == 'climate'\" class=\"material-icons\">{{arrowIconName}}</span>\n              <span v-else class=\"material-icons\">sort</span>\n            </th>\n            <th>Diameter</th>\n            <th>Gravity</th>\n            <th>Created</th>\n            <th>Orbital Period</th>\n            <th>Population</th>\n            <th>Rotation Period</th>\n            <th>Surface Water</th>\n            <th>Terrain</th>\n            <th>Edited</th>\n          </tr>\n        </thead>\n        <tbody class=\"table-group-divider\">\n          <tr v-for=\"(item, index) in sortedData\" :key=\"index\">\n            <td>{{ item.name }}</td>\n            <td>{{ item.climate }}</td>\n            <td>{{ item.diameter }}</td>\n            <td>{{ item.gravity }}</td>\n            <td>{{ formatDate(item.created) }}</td>\n            <td>{{ item.orbital_period }}</td>\n            <td>{{ item.population }}</td>\n            <td>{{ item.rotation_period }}</td>\n            <td>{{ item.surface_water }}</td>\n            <td>{{ item.terrain }}</td>\n            <td>{{ formatDate(item.edited) }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div> \n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref, computed, watch, onBeforeMount } from 'vue';\nimport swapiPlanet from '@/api/swapiService';\n\nimport formatDate from '@/composables/DateComposable';\n\nexport default defineComponent({\n  name: \"TablePlanet\",\n  setup() {\n\n    const data = ref([]); // Holds the API data\n    const sortBy = ref(null); // Holds the current sorting column\n    const sortDesc = ref(false); // Determines whether to sort in descending order\n    const arrowIconName = ref(\"arrow_drop_up\");\n    const sortedData = computed(() => data.value)\n\n    onBeforeMount(async () => {\n      data.value = await swapiPlanet.fetchData()\n    });\n\n    // Watch the sortBy and sortDesc refs for changes and sort the data accordingly\n    watch([sortBy, sortDesc], () => {\n      if (sortBy.value) {\n        data.value.sort((a, b) => {\n          const modifier = sortDesc.value ? -1 : 1;\n          modifier === 1 ?  arrowIconName.value = \"arrow_drop_up\" : arrowIconName.value = \"arrow_drop_down\" ;\n          if (a[sortBy.value] < b[sortBy.value]) return -1 * modifier;\n          if (a[sortBy.value] > b[sortBy.value]) return 1 * modifier;\n          return 0;\n        });\n      }\n    });\n\n    const sort = (column) => {\n      if (sortBy.value === column) {\n        sortDesc.value = !sortDesc.value;\n      } else {\n        sortBy.value = column;\n        sortDesc.value = false;\n      }\n\n    };\n\n    // Return the reactive data and methods\n    return {\n      data,\n      sortBy,\n      sortDesc,\n      sortedData,\n      arrowIconName,\n      formatDate,\n      sort,\n      \n    };\n  },\n});\n</script>\n<style>\n\n.table-planets{\n    padding: 1rem;\n    border: solid var(--bs-border-color);\n    border-width: 1px;\n    border-radius: var(--bs-border-radius);\n}\n\n.material-icons {\n    vertical-align: -6px;\n}\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}